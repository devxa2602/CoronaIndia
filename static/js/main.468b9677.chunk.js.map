{"version":3,"sources":["components/navbar.js","components/card.js","components/StateTable.js","components/StateGraph.js","components/DailyStateChart.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["navbar","class","href","id","type","placeholder","aria-label","aria-describedby","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","card","props","className","value","StateTable","show","regional","length","map","row","Object","keys","key","index","el","width","cellSpacing","StateGraph","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","style","position","left","top","right","bottom","overflow","pointerEvents","visibility","zIndex","options","responsive","scales","xAxes","ticks","beginAtZero","display","legend","DailyStateChart","state","day","total","indian","foreign","discharged","death","fetch","method","then","response","json","setState","summary","console","log","this","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","tooltips","mode","Component","Footer","textDecoration","color","xmlns","viewBox","height","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","target","paddingTop","App","success","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.468b9677.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction navbar() {\r\n    return (\r\n       <div class=\"sb-nav-fixed\">\r\n            <nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">Corona India</a><button class=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" href=\"#\"><i class=\"fas fa-bars\"></i></button\r\n            >\r\n            <form class=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\r\n                <div class=\"input-group\">\r\n                    <input class=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-primary\" type=\"button\"><i class=\"fas fa-search\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n          \r\n            <ul class=\"navbar-nav ml-auto ml-md-0\">\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-user fa-fw\"></i></a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                        <a class=\"dropdown-item\" href=\"#\">Settings</a><a class=\"dropdown-item\" href=\"#\">Activity Log</a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <a class=\"dropdown-item\" href=\"login.html\">Logout</a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default navbar\r\n","import React from 'react'\r\n\r\nfunction card(props) {\r\n    return (\r\n        <div className='container'>\r\n        <div class=\" card-deck \">\r\n            <div class=\"card bg-secondary text-white mb-4\">\r\n                <div class=\"card-body \">\r\n                    <h4 class=\"text-white text-center\">\r\n                        Total Cases\r\n                    </h4></div>\r\n                <div class=\"card-footer\">\r\n    <h2 class=\"text-white text-center\"> {props.value[0]}</h2>\r\n                </div>\r\n            </div>\r\n     \r\n            <div class=\"card bg-warning text-white mb-4\">\r\n                <div class=\"card-body \">\r\n                    <h4 class=\"text-white text-center\">\r\n                        Indians\r\n                    </h4></div>\r\n                <div class=\"card-footer\">\r\n                <h2 class=\"text-white text-center\">{props.value[1]}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-100 d-none d-sm-block d-md-none\"></div>\r\n            <div class=\"card bg-primary text-white mb-4\">\r\n                <div class=\"card-body \">\r\n                    <h4 class=\"text-white text-center\">\r\n                        Foreigners\r\n                    </h4></div>\r\n                <div class=\"card-footer\">\r\n                <h2 class=\"text-white text-center\">{props.value[2]}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-100 d-none d-md-block d-lg-none\"></div>\r\n            <div class=\"card bg-success text-white mb-4\">\r\n                <div class=\"card-body \">\r\n                    <h4 class=\"text-white text-center\">\r\n                        Recovered\r\n                    </h4></div>\r\n                <div class=\"card-footer\">\r\n                <h2 class=\"text-white text-center\">{props.value[3]}</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"w-100 d-none d-sm-block d-md-none\"></div>\r\n         <div class=\"w-100 d-none d-lg-block d-xl-none\"></div>\r\n            <div class=\"card bg-danger text-white mb-4\">\r\n                <div class=\"card-body \">\r\n                    <h4 class=\"text-white text-center\">\r\n                        Death\r\n                    </h4></div>\r\n                <div class=\"card-footer\">\r\n                <h2 class=\"text-white text-center\"> {props.value[4]}</h2>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default card\r\n","import React from 'react'\r\n\r\nfunction StateTable(props) {\r\n let show =null;\r\n if(props.regional.length!==0){\r\n     let table=props.regional.map((row)=>Object.keys(row).map((key,index)=>(row[key])))\r\n show=table.map((row,index)=>(<tr key={index} >\r\n     {row.map((el,index)=>(<td>{el}</td>))}\r\n </tr>))\r\n }\r\n    return (\r\n        <div class=\"card mb-4\">\r\n                         <div class=\"card-header\"><i class=\"fas fa-table mr-1\"></i>Data Table for state Data</div>\r\n                            <div class=\"card-body\">\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>State</th>\r\n                                                <th>Indians</th>\r\n                                                <th>Foreigners</th>\r\n                                                <th>Cured</th>\r\n                                                <th>Deaths</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tfoot>\r\n                                            <tr>\r\n                                                <th>State</th>\r\n                                                <th>Indians</th>\r\n                                                <th>Foreigners</th>\r\n                                                <th>Cured</th>\r\n                                                <th>Deaths</th>\r\n                                            </tr>\r\n                                        </tfoot>\r\n                                             <tbody>\r\n                                           {show}\r\n                                            </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n    )\r\n}\r\n\r\nexport default StateTable\r\n","import React from 'react'\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\n\r\nfunction StateGraph(props) {\r\n    let data=null;\r\nif(props.regional.length!==0){\r\n     data = {\r\n        labels: props.regional.map((row)=>Object.keys(row).map((keys,index)=>(row[keys]))).map((row)=>(row[0])),\r\n        datasets: [\r\n          {\r\n            label: 'States',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: props.regional.map((row)=>Object.keys(row).map((keys,index)=>(row[keys]))).map((row)=>(row[1]))\r\n          }\r\n        ]\r\n      };\r\n}\r\n    return (\r\n        <div class=\"col-xl-12 py-1\" >\r\n        <div class=\"card mb-4\">\r\n            <div class=\"card-header\"><i class=\"fas fa-chart-bar mr-1\"></i>State Wise Case Distribution</div>\r\n        <div class=\"card-body\"id=\"myBarChart\"> \r\n                <Bar data={data}\r\n                style={{\r\n                    position: 'absolute',\r\n                        left: '0px',\r\n                        top: '0px',\r\n                        right: '0px',\r\n                        bottom: '0px',\r\n                        overflow: 'hidden',\r\n                        pointerEvents: 'none',\r\n                        visibility: 'hidden',\r\n                        zIndex: -1}}\r\n                 options={{\r\n                    responsive: true,\r\n                    scales: {\r\n                      xAxes: [{\r\n                        ticks: {\r\n                          beginAtZero: false,\r\n                          display: false\r\n                        }\r\n                      }]},\r\n                    legend: {\r\n                        display: false\r\n                     }}}\r\n                />\r\n          </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default StateGraph\r\n","import React, { Component } from 'react'\r\nimport {Line} from 'react-chartjs-2';\r\nexport class DailyStateChart extends Component {\r\n    state={\r\n        day:[],\r\n        total:[],\r\n        indian:[],\r\n        foreign:[],\r\n        discharged:[],\r\n        death:[]\r\n    }\r\n    componentDidMount(){\r\n        const url=' https://api.rootnet.in/covid19-in/stats/daily';\r\n        fetch(url,{\r\n          method:\"GET\"\r\n        })\r\n        .then(response=>response.json())\r\n        .then(data=>this.setState({\r\n          day:data.data.map((el)=>el.day),\r\n          total:data.data.map((el)=>el.summary).map((day)=>Object.keys(day).map((key)=>day[key])).map((el)=>el[0]),\r\n          indian:data.data.map((el)=>el.summary).map((day)=>Object.keys(day).map((key)=>day[key])).map((el)=>el[1]),\r\n          foreign:data.data.map((el)=>el.summary).map((day)=>Object.keys(day).map((key)=>day[key])).map((el)=>el[2]),\r\n          discharged:data.data.map((el)=>el.summary).map((day)=>Object.keys(day).map((key)=>day[key])).map((el)=>el[3]),\r\n          death:data.data.map((el)=>el.summary).map((day)=>Object.keys(day).map((key)=>day[key])).map((el)=>el[4])}\r\n          ,()=>console.log(this.state)))\r\n      }\r\n     \r\n\r\n    render() {\r\n        const data = {\r\n            labels: this.state.day,\r\n            datasets: [\r\n              {\r\n                label: 'Total cases',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgba(75,192,192,0.4)',\r\n                borderColor: '#6610f2',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#6610f2',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                \r\n                data: this.state.total\r\n              },\r\n              {\r\n                label: 'Indians',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#e83e8c',\r\n                borderColor: '#e83e8c',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#e83e8c',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                \r\n                data: this.state.indian\r\n              },\r\n              {\r\n                label: 'Foreigner',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#fd7e14',\r\n                borderColor: '#fd7e14',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fd7e14',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.state.foreign\r\n              },\r\n              {\r\n                label: 'Discharged',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#28a745',\r\n                borderColor: '#28a745',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#28a745',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.state.discharged\r\n              },\r\n              {\r\n                label: 'Deaths',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: '#dc3545',\r\n                borderColor: '#dc3545',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#dc3545',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: this.state.death\r\n              }\r\n            ]\r\n          };\r\n          \r\n        return (\r\n            <div class=\"col-xl-12  py-1\">\r\n                 <div class=\"card mb-4\">\r\n                        <div class=\"card-header\"><i class=\"fas fa-chart-bar mr-1\"></i>Daily Stats Comparison</div>\r\n                                <div class=\"card-body\"> \r\n                                <Line id=\"chBar\"\r\n                                data={data} \r\n                                options={{\r\n                                        responsive: true,\r\n                                        scales: {\r\n                                          xAxes: [{\r\n                                            ticks: {\r\n                                              beginAtZero: false,\r\n                                            }\r\n                                          }]\r\n                                        },\r\n                                        legend: {\r\n                                            display: false\r\n                                         },\r\n                                       \r\n                                        tooltips: {\r\n                                            mode: 'label'\r\n                                          }} }/>\r\n                                    </div>\r\n                </div>\r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DailyStateChart\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer class=\"py-4 bg-dark mt-auto\">\r\n        <div class=\"container-fluid \" style={{textDecoration: \"none\",color: \"white\"}}>\r\n            <div class=\"d-flex align-items-center justify-content-between small\">\r\n                <div class=\"text-muted\">Made with \r\n                <svg id=\"i-heart\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" fill=\"none\" stroke=\"currentcolor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\">\r\n                <path stroke-width=\"0\" fill=\"#f44336\" d=\"M4 16 C1 12 2 6 7 4 12 2 15 6 16 8 17 6 21 2 26 4 31 6 31 12 28 16 25 20 16 28 16 28 16 28 7 20 4 16 Z\"></path>\r\n            </svg>by \r\n            <a href=\"https://github.com/devxa2602\" target=\"_BLANK\" style={{textDecoration: \"none\",color: \"white\"}}> Akshay Rawate\r\n            </a>\r\n                </div>\r\n                <div>\r\n            <p class=\"white-text mb-0 text-center\" style={{paddingTop: \"10px !important\"}}>Checkout <a href=\"https://github.com/amodm/api-covid19-in\" target=\"_BLANK\" >COVID-19 Stats API</a>\r\n            </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\nimport Navbar from './components/navbar';\nimport Card from './components/card';\nimport './App.css';\nimport StateTable from './components/StateTable';\nimport StateGraph from './components/StateGraph';\nimport DailyStateChart from './components/DailyStateChart';\nimport Footer from './components/Footer';\nexport class App extends Component {\n  state={\n    success:false,\n    data:{},\n    regional:[]\n  }\n//  createChartData=(object)=>{\n//    var ChartData=null;\n//     Object.keys(object).map(function(key, index) {\n//      return(\n//        ChartData={\n//         labels: [...key],\n//         datasets: [{\n//           label: 'My data',\n//           data:[10,25,26,18,18],\n//           backgroundColor: '#112233'\n//         }]\n//        }\n//      )\n//      })\n//   }\n  componentDidMount(){\n      const url=' https://api.rootnet.in/covid19-in/stats/latest';\n      fetch(url,{\n        method:\"GET\"\n      })\n      .then(response=>response.json())\n      .then(data=>this.setState({\n        data:data.data.summary,\n        success:data.success,\n        regional:data.data.regional},()=>console.log(this.state)))\n    }\n    \n  render() {\n    return (\n      <div>\n        <header>\n        <Navbar/>\n          <div className=\"jumbotron bg-cover \">\n            <div className=\"container \">\n                <h1 className=\"display-4\">Go! Corona Go!!!</h1>\n                <p className=\"lead\">This is dashboard website for Covid-19 stats of India.</p>\n                <hr className=\"my-4\"/>\n                <p>It uses amod/api-covid-19 api for data.</p>\n            </div>\n         </div>\n        </header>\n      \n      <section className=\"content\" >\n        <div className=\"container \">\n                <Card value={Object.keys(this.state.data).map((key,index)=>this.state.data[key])}/>\n                  <div class=\"row my-2\">\n                    <StateGraph regional={this.state.regional}/>\n                    {/* <StateWiseChart chart={chart}/> */}\n                    <DailyStateChart/>\n                  </div>\n                <StateTable regional={this.state.regional}/>\n              \n              </div>\n        </section>\n        <Footer/>\n      </div>\n    \n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}